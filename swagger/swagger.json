{
    "swagger": "2.0",
    "info": {
        "title": "Playbasis API",
        "description": "API Explorer",
        "termsOfService": "",
        "contact": {
            "email": "info@playbasis.com"
        },
        "version": "1.0"
    },
    "host": "api.pbapp.net",
    "basePath": "/",
    "schemes": [
        "https"
    ],
    "paths": {
        "/Auth": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "description": "Request an access token from Playbasis",
                "parameters": [
                    {
                        "name": "api_key",
                        "in": "query",
                        "description": "API Key issued by Playbasis",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api_secret",
                        "in": "query",
                        "description": "API Secret issued by Playbasis",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "apiKey": [],
                        "apiSecret": []
                    }
                ]
            }
        },
        "/Auth/renew": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "description": "Create a new access token from Playbasis",
                "parameters": [
                    {
                        "name": "api_key",
                        "in": "query",
                        "description": "API Key issued by Playbasis",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api_secret",
                        "in": "query",
                        "description": "API Secret issued by Playbasis",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Auth/player/{player_id}": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "description": "Create a new access token from Playbasis",
                "parameters": [
                    {
                        "name": "api_key",
                        "in": "query",
                        "description": "API Key issued by Playbasis",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "Player's password",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Auth/player/{player_id}/renew": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "description": "Create a new access token from Playbasis and discard the previous one",
                "parameters": [
                    {
                        "name": "api_key",
                        "in": "query",
                        "description": "API Key issued by Playbasis",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "refresh_token",
                        "in": "query",
                        "description": "Refresh token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Auth/player/{player_id}/revoke": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "description": "Revoke existing Access Token",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Auth/player/{player_id}/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "description": "Register a user from client's website as a Playbasis player",
                "parameters": [
                    {
                        "name": "api_key",
                        "in": "query",
                        "description": "API Key issued by Playbasis",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "Player's password",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "username",
                        "in": "query",
                        "description": "Player's username",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Player's email",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "image",
                        "in": "query",
                        "description": "Player's profile image",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "phone_number",
                        "in": "query",
                        "description": "Player's phone number (e.g. +66 xxyyyyzzzz)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "description": "Specific tag(s) to find",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "facebook_id",
                        "in": "query",
                        "description": "Player's Facebook ID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "twitter_id",
                        "in": "query",
                        "description": "Player's Twitter ID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "first_name",
                        "in": "query",
                        "description": "Player's first name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "last_name",
                        "in": "query",
                        "description": "Player's last name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gender",
                        "in": "query",
                        "description": "Player's gender",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "1",
                            "2"
                        ]
                    },
                    {
                        "name": "birth_date",
                        "in": "query",
                        "description": "Player's date of birth (e.g. YYYY-MM-DD)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "description": "Referral code of another player for an invitation",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "anonymous",
                        "in": "query",
                        "description": "Anonymous flag",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "0",
                            "1"
                        ]
                    },
                    {
                        "name": "device_id",
                        "in": "query",
                        "description": "Player's Device ID to submit verification process",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "approve_status",
                        "in": "query",
                        "description": "Approval status of the Player",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "approved",
                            "rejected",
                            "pending"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Badges": {
            "get": {
                "tags": [
                    "Badge"
                ],
                "description": "Returns information about all available badges",
                "parameters": [
                    {
                        "name": "tags",
                        "in": "path",
                        "description": "Comma separated values",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Badge/{id}": {
            "get": {
                "tags": [
                    "Badge"
                ],
                "description": "Get information about a specific badge",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Campaign": {
            "get": {
                "tags": [
                    "Campaign"
                ],
                "description": "Get campaign",
                "parameters": [
                    {
                        "name": "campaign_name",
                        "in": "query",
                        "description": "Name of campaign to retrieve campaign details",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "description": "Specific tag(s) to find",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Campaign/active": {
            "get": {
                "tags": [
                    "Campaign"
                ],
                "description": "Retrieve active campaign",
                "parameters": [
                    {
                        "name": "tags",
                        "in": "query",
                        "description": "Specific tag(s) to find",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Content": {
            "get": {
                "tags": [
                    "Content"
                ],
                "description": "Retrieve content(s) by specified filter fields",
                "parameters": [
                    {
                        "name": "node_id",
                        "in": "query",
                        "description": "Node Id of specific content",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "language",
                        "in": "query",
                        "description": "Select language of content's detail | default = English",
                        "required": false,
                        "type": "string",
                        "default": "English"
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Specific title of content",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Specific category name of content",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "date_check",
                        "in": "query",
                        "description": "Return content that is available in this date range",
                        "required": false,
                        "type": "string",
                        "default": "false"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Return content that is available in this date range",
                        "required": false,
                        "type": "string",
                        "default": "title",
                        "enum": [
                            "title",
                            "date_start",
                            "date_end",
                            "date_added",
                            "date_modified",
                            "random",
                            "followup",
                            "action"
                        ]
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Return content that is available in this date range | specify seed number if choice is 'random'",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc",
                            "random"
                        ]
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Specify paging offset | default = 0",
                        "required": false,
                        "type": "string",
                        "default": 0
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Specify amount to return | default = 20",
                        "required": false,
                        "type": "string",
                        "default": 20
                    },
                    {
                        "name": "full_html",
                        "in": "query",
                        "description": "Return full html",
                        "required": false,
                        "type": "string",
                        "default": "false",
                        "enum": [
                            "true",
                            "false"
                        ]
                    },
                    {
                        "name": "pin",
                        "in": "query",
                        "description": "Secret PIN code for content",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "description": "Specific tag(s) to find",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Specify status of the content to find. | default = true",
                        "required": false,
                        "type": "string",
                        "default": "true",
                        "enum": [
                            "true",
                            "false",
                            "all"
                        ]
                    },
                    {
                        "name": "player_id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "only_new_content",
                        "in": "path",
                        "description": "Display content which the player does not provide any action (like/dislike)",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "true",
                            "false"
                        ]
                    },
                    {
                        "name": "only_new_feedback",
                        "in": "path",
                        "description": "Display content which the player does not provide any action yet",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "true",
                            "false"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Content/count": {
            "get": {
                "tags": [
                    "Content"
                ],
                "description": "Count content(s) by specified filter fields",
                "parameters": [
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Specific title of content",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Specific category name of content",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "date_check",
                        "in": "query",
                        "description": "Return content that is available in this date range",
                        "required": false,
                        "type": "string",
                        "default": "false"
                    },
                    {
                        "name": "pin",
                        "in": "query",
                        "description": "Secret PIN code for content",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "description": "Specific tag(s) to find",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Specify status of the content to find. | default = true",
                        "required": false,
                        "type": "string",
                        "default": "true",
                        "enum": [
                            "true",
                            "false",
                            "all"
                        ]
                    },
                    {
                        "name": "player_id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "only_new_content",
                        "in": "path",
                        "description": "Display content which the player does not provide any action (like/dislike)",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "true",
                            "false"
                        ]
                    },
                    {
                        "name": "only_new_feedback",
                        "in": "path",
                        "description": "Display content which the player does not provide any action yet",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "true",
                            "false"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Content/category": {
            "get": {
                "tags": [
                    "Content"
                ],
                "description": "Retrieve category by specified filter fields",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Specific Id of category",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Specific name of category",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sort",
                        "in": "path",
                        "description": "Specific field to sort | (e.g. _id, name, dated_added, date_modified)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "order",
                        "in": "path",
                        "description": "Direction to order | (e.g. desc, asc)",
                        "required": false,
                        "type": "string",
                        "default": "asc"
                    },
                    {
                        "name": "offset",
                        "in": "path",
                        "description": "Specify paging offset | default = 0",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "limit",
                        "in": "path",
                        "description": "Specify amount of records",
                        "required": false,
                        "type": "integer",
                        "default": 20
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Content/addContent": {
            "post": {
                "tags": [
                    "Content"
                ],
                "description": "Create content",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "node_id",
                        "in": "query",
                        "description": "Specific Node Id of content",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Specific title of content",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "summary",
                        "in": "query",
                        "description": "Specific summary of content",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "detail",
                        "in": "query",
                        "description": "Specific detail of content",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Specific category name of content",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "image",
                        "in": "query",
                        "description": "URL to the content profile image",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "URL to the content profile image",
                        "required": false,
                        "type": "string",
                        "default": "false",
                        "enum": [
                            "true",
                            "false"
                        ]
                    },
                    {
                        "name": "date_start",
                        "in": "query",
                        "description": "Date start | format = YYYY-MM-DD (e.g. 1982-09-29)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "date_end",
                        "in": "query",
                        "description": "Date end | format = YYYY-MM-DD (e.g. 1982-09-29)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pin",
                        "in": "query",
                        "description": "Secret PIN code for content",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "description": "Specific tag(s) to find",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "description": "Comma separated keys",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "in": "query",
                        "description": "Comma separated values",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Content/{node_id}/update": {
            "post": {
                "tags": [
                    "Content"
                ],
                "description": "Update content",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "node_id",
                        "in": "path",
                        "description": "Specific Node Id of content",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Specific title of content",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "summary",
                        "in": "query",
                        "description": "Specific summary of content",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "detail",
                        "in": "query",
                        "description": "Specific detail of content",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Specific category name of content",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "image",
                        "in": "query",
                        "description": "URL to the content profile image",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "URL to the content profile image",
                        "required": false,
                        "type": "string",
                        "default": "false",
                        "enum": [
                            "true",
                            "false"
                        ]
                    },
                    {
                        "name": "date_start",
                        "in": "query",
                        "description": "Date start | format = YYYY-MM-DD (e.g. 1982-09-29)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "date_end",
                        "in": "query",
                        "description": "Date end | format = YYYY-MM-DD (e.g. 1982-09-29)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pin",
                        "in": "query",
                        "description": "Secret PIN code for content",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "description": "Specific tag(s) to find",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "description": "Comma separated keys",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "in": "query",
                        "description": "Comma separated values",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Content/{node_id}/player/{player_id}/like": {
            "post": {
                "tags": [
                    "Content"
                ],
                "description": "Send a like action as a player to content",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "node_id",
                        "in": "path",
                        "description": "Node ID as used in client's content",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "description": "Custom fields keys separated by comma",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "values",
                        "in": "query",
                        "description": "Custom fields values separated by comma",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Content/{node_id}/player/{player_id}/dislike": {
            "post": {
                "tags": [
                    "Content"
                ],
                "description": "Send a dislike action as a player to content",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "node_id",
                        "in": "path",
                        "description": "Node ID as used in client's content",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "description": "Custom fields keys separated by comma",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "values",
                        "in": "query",
                        "description": "Custom fields values separated by comma",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Content/{node_id}/player/{player_id}/feedback": {
            "post": {
                "tags": [
                    "Content"
                ],
                "description": "Send feedback as a player to content",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "node_id",
                        "in": "path",
                        "description": "Node ID as used in client's content",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "feedback",
                        "in": "query",
                        "description": "Feedback from the player to the content",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "description": "Custom fields keys separated by comma",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "values",
                        "in": "query",
                        "description": "Custom fields values separated by comma",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Content/{node_id}/delete": {
            "post": {
                "tags": [
                    "Content"
                ],
                "description": "Delete content",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "node_id",
                        "in": "path",
                        "description": "Specific Node Id of content",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Content/category/create": {
            "post": {
                "tags": [
                    "Content"
                ],
                "description": "Create content category",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Specific name of category",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Content/category/update": {
            "post": {
                "tags": [
                    "Content"
                ],
                "description": "Update content category",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Specific Id of category",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Specific name of category",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Content/category/delete": {
            "post": {
                "tags": [
                    "Content"
                ],
                "description": "Delete content category",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Specific Id of category",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Style": {
            "get": {
                "tags": [
                    "Style"
                ],
                "description": "Retrieve custom style by specified filter fields",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name of group to retrieve custom style",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "description": "Name of key name to retrieve custom style",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Field to sort (e.g. name, key, date_added, date_modified)",
                        "required": false,
                        "type": "string",
                        "default": "name"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Field to sort (e.g. name, key, date_added, date_modified)",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc",
                            "random"
                        ]
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Specify paging offset | default = 0",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Specify paging limit | default = 20",
                        "required": false,
                        "type": "integer",
                        "default": 20
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Point/custom/list": {
            "get": {
                "tags": [
                    "Point"
                ],
                "description": "Return a list of custom points to be approved",
                "parameters": [
                    {
                        "name": "player_list",
                        "in": "query",
                        "description": "List of players (e.g. John, Max, Robert)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Status of custom point",
                        "required": true,
                        "type": "string",
                        "default": "all",
                        "enum": [
                            "all",
                            "approve",
                            "pending",
                            "reject"
                        ]
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From date (e.g. YYYY-MM-DD format)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "To date (e.g. YYYY-MM-DD format)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Specify paging offset | default = 0",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Specify paging limit | default = 20",
                        "required": false,
                        "type": "integer",
                        "default": 20
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Point/custom/transaction": {
            "get": {
                "tags": [
                    "Point"
                ],
                "description": "Return transaction of custompoint",
                "parameters": [
                    {
                        "name": "transaction_id",
                        "in": "query",
                        "description": "Transaction ID of custompoint",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Point/custom/approval": {
            "post": {
                "tags": [
                    "Point"
                ],
                "description": "To approve custom point in transaction list",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "transaction_id",
                        "in": "query",
                        "description": "Transaction ID of custompoint",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "approve",
                        "in": "query",
                        "description": "Transaction ID of custompoint",
                        "required": true,
                        "type": "boolean",
                        "enum": [
                            "true",
                            "false"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Point/custom/remaining": {
            "get": {
                "tags": [
                    "Point"
                ],
                "description": "Return remaining for each points",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Return remaining for each points",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Point/custom/log": {
            "get": {
                "tags": [
                    "Point"
                ],
                "description": "Return First/Last reward custom log",
                "parameters": [
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "reward_name",
                        "in": "query",
                        "description": "Name of reward to be queried",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "description": "Key name of custom parameter",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Key name of custom parameter",
                        "required": true,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Point/custom/clearLog": {
            "post": {
                "tags": [
                    "Point"
                ],
                "description": "To clear reward custom log",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "log_id",
                        "in": "query",
                        "description": "ID of reward custom log",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Email/send": {
            "post": {
                "tags": [
                    "Communication"
                ],
                "description": "Send email to a player",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "subject",
                        "in": "query",
                        "description": "Email subject",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "message",
                        "in": "query",
                        "description": "Email message | message or template_id required",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "template_id",
                        "in": "query",
                        "description": "Template ID | message or template_id required",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Email/goods": {
            "post": {
                "tags": [
                    "Communication"
                ],
                "description": "Send email to a player",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ref_id",
                        "in": "query",
                        "description": "Reference transaction ID for redemption",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "subject",
                        "in": "query",
                        "description": "Email subject",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "message",
                        "in": "query",
                        "description": "Email message | message or template_id required",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "template_id",
                        "in": "query",
                        "description": "Template ID | message or template_id required",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Email/recent": {
            "get": {
                "tags": [
                    "Communication"
                ],
                "description": "List recent emails sent to a player",
                "parameters": [
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "since",
                        "in": "query",
                        "description": "DateTime formatted string",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Email/template/{template_id}": {
            "get": {
                "tags": [
                    "Communication"
                ],
                "description": "Get processed email template.",
                "parameters": [
                    {
                        "name": "template_id",
                        "in": "path",
                        "description": "Template message ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Email/template": {
            "get": {
                "tags": [
                    "Communication"
                ],
                "description": "List email templates",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Engine/rules": {
            "get": {
                "tags": [
                    "Engine"
                ],
                "description": "Returns a list of active game rules defined for a client's website",
                "parameters": [
                    {
                        "name": "action",
                        "in": "query",
                        "description": "Name of action performed",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Engine/rule/{id}": {
            "get": {
                "tags": [
                    "Engine"
                ],
                "description": "Get details of the rule",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Rule ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Engine/rule": {
            "post": {
                "tags": [
                    "Engine"
                ],
                "description": "Returns a list of active game rules defined for a client's website",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "Name of action performed",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "url",
                        "in": "query",
                        "description": "URL of the page that triggers the action or any identifier string",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "reward",
                        "in": "query",
                        "description": "Name of the point-based rewardto give to the player",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "quantity",
                        "in": "query",
                        "description": "Amount of point-based rewards to give to the player",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "rule_id",
                        "in": "query",
                        "description": "You can also specify a rule Id so that the rule engine will only process against that rule",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "node_id",
                        "in": "query",
                        "description": "You can also specific a node Id so that the rule engine will process with that rule",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "session_id",
                        "in": "query",
                        "description": "You can specify a session Id to extend expiration session time for the player",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/File/delete": {
            "post": {
                "tags": [
                    "File"
                ],
                "description": "Retrieve image(s) content by specified filter fields",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "file_name",
                        "in": "query",
                        "description": "Image file name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/File/list": {
            "get": {
                "tags": [
                    "File"
                ],
                "description": "Retrieve image(s) content by specified filter fields",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Id of file data",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Field to sort | (e.g. date_added, date_modified, type, file_size)",
                        "required": false,
                        "type": "string",
                        "default": "date_added"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Fitbit": {
            "get": {
                "tags": [
                    "Health"
                ],
                "description": "Retrieve Fitbit player",
                "parameters": [
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Fitbit/add": {
            "post": {
                "tags": [
                    "Health"
                ],
                "description": "Add a new Fitbit player",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fitbit_token",
                        "in": "query",
                        "description": "Fitbit token to access Fitbit API",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "subscription_id",
                        "in": "query",
                        "description": "Subscription Id to subscribe to a Fitbit activity",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Fitbit/{player_id}/update": {
            "post": {
                "tags": [
                    "Health"
                ],
                "description": "Add a new Fitbit player",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fitbit_token",
                        "in": "query",
                        "description": "Fitbit token to access Fitbit API",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "subscription_id",
                        "in": "query",
                        "description": "Subscription Id to subscribe to a Fitbit activity",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Fitbit/{player_id}/delete": {
            "post": {
                "tags": [
                    "Health"
                ],
                "description": "Delete Fitbit Player",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Fitbit/{player_id}/data": {
            "get": {
                "tags": [
                    "Health"
                ],
                "description": "Delete Fitbit Player",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Category of data",
                        "required": true,
                        "type": "string",
                        "default": "PROFILE",
                        "enum": [
                            "ACTIVITY",
                            "BODY",
                            "BP",
                            "FOOD",
                            "GLUCOSE",
                            "HEART",
                            "PROFILE",
                            "SLEEP"
                        ]
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Date start | format YYYY-MM-DD or 'today'",
                        "required": false,
                        "type": "string",
                        "default": "today"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Game": {
            "get": {
                "tags": [
                    "Game"
                ],
                "description": "Retrieve game(s) setting by specified filter fields",
                "parameters": [
                    {
                        "name": "game_name",
                        "in": "query",
                        "description": "Name of game to retrieve game details",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "stage_level",
                        "in": "query",
                        "description": "Stage level of game",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "stage_name",
                        "in": "query",
                        "description": "Stage name of game",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Field to sort",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "game_name",
                            "date_added",
                            "date_modified",
                            "random"
                        ]
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Direction to order | specify seed number if choice is 'random'",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc",
                            "random"
                        ]
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Specify paging offset | default = 0",
                        "required": false,
                        "type": "string",
                        "default": 0
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Specify paging limit",
                        "required": false,
                        "type": "string",
                        "default": 20
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "description": "Specific tag(s) to find",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Status of the content to find",
                        "required": false,
                        "type": "string",
                        "default": "true",
                        "enum": [
                            "true",
                            "false",
                            "all"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Game/campaign": {
            "get": {
                "tags": [
                    "Game"
                ],
                "description": "Retrieve game campaign",
                "parameters": [
                    {
                        "name": "game_name",
                        "in": "query",
                        "description": "Name of game to retrieve game details",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "campaign_name",
                        "in": "query",
                        "description": "Name of campaign to retrieve campaign details",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Game/campaign/active": {
            "get": {
                "tags": [
                    "Game"
                ],
                "description": "Retrieve active campaign",
                "parameters": [
                    {
                        "name": "game_name",
                        "in": "query",
                        "description": "Name of game to retrieve game details",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Game/playerItemStatus": {
            "get": {
                "tags": [
                    "Game"
                ],
                "description": "Retrieve active campaign",
                "parameters": [
                    {
                        "name": "game_name",
                        "in": "query",
                        "description": "Name of game to retrieve game details",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "stage_level",
                        "in": "query",
                        "description": "Specific stage level of game",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "item_id",
                        "in": "query",
                        "description": "Specific item Id in the game",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Game/setCurrentStage": {
            "post": {
                "tags": [
                    "Game"
                ],
                "description": "Set current stage for player to play the game",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "game_name",
                        "in": "query",
                        "description": "Name of game to retrieve game details",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "stage_level",
                        "in": "query",
                        "description": "Specific stage level of game",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Goods/{id}": {
            "get": {
                "tags": [
                    "Goods"
                ],
                "description": "Get information about goods with a specific Id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Goods": {
            "get": {
                "tags": [
                    "Goods"
                ],
                "description": "Get information about goods with a specific Id",
                "parameters": [
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "active_filter",
                        "in": "query",
                        "description": "Filter only active goods",
                        "required": true,
                        "type": "string",
                        "default": "false",
                        "enum": [
                            "true",
                            "false"
                        ]
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name or group name of goods to search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "date_start",
                        "in": "query",
                        "description": "Date start | format = YYYY-MM-DD (e.g. 1982-09-29)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "date_end",
                        "in": "query",
                        "description": "Date end | format = YYYY-MM-DD (e.g. 1982-09-29)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Field to be sorted | (e.g. sort_order, name, quantity, description, date_start, date_end)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Specify sorted direction | (e.g. desc, asc)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Specify paging offset | default = 0",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Specify paging limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "tags",
                        "in": "path",
                        "description": "Comma separated values",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "custom_param",
                        "in": "path",
                        "description": "Custom param | (e.g. <, <=, >, >=, =, !=)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "not_custom_param",
                        "in": "path",
                        "description": "Not custom param | (e.g. <, <=, >, >=, =, !=)",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Goods/field": {
            "get": {
                "tags": [
                    "Goods"
                ],
                "description": "Get information about goods with a specific Id",
                "parameters": [
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "selected_field",
                        "in": "query",
                        "description": "Select parameters",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "date_start",
                        "in": "query",
                        "description": "Date start | format = YYYY-MM-DD (e.g. 1982-09-29)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "date_end",
                        "in": "query",
                        "description": "Date end | format = YYYY-MM-DD (e.g. 1982-09-29)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Specify paging offset | default = 0",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Specify paging limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "tags",
                        "in": "path",
                        "description": "Comma separated values",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Goods/sponsor/{id}": {
            "get": {
                "tags": [
                    "Goods"
                ],
                "description": "Get information about goods with a specific Id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Goods/sponsor": {
            "get": {
                "tags": [
                    "Goods"
                ],
                "description": "Returns information about all available sponsored goods",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Insurance/getSuggestInsurance": {
            "post": {
                "tags": [
                    "Insurance"
                ],
                "description": "To get suggest insurance cover",
                "parameters": [
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "product_type",
                        "in": "query",
                        "description": "Insurance product",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Language": {
            "get": {
                "tags": [
                    "Language"
                ],
                "description": "Retrieve language list",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Link": {
            "get": {
                "tags": [
                    "Link"
                ],
                "description": "Find details of data associated wtih a link",
                "parameters": [
                    {
                        "name": "link",
                        "in": "query",
                        "description": "Link to find associated data",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "apiKey": [],
                        "token": []
                    }
                ]
            }
        },
        "/Link/generate": {
            "post": {
                "tags": [
                    "Link"
                ],
                "description": "Generate a unique URL",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Location": {
            "get": {
                "tags": [
                    "Location"
                ],
                "description": "Retrieve location",
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "query",
                        "description": "Location ID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Status to retrieve location",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Merchant/availableBranchGoodsGroup": {
            "get": {
                "tags": [
                    "Merchant"
                ],
                "description": "Return list of available branch for goods group",
                "parameters": [
                    {
                        "name": "goods_group",
                        "in": "query",
                        "description": "Name of goods group",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Merchant/goodsGroup/verify": {
            "get": {
                "tags": [
                    "Merchant"
                ],
                "description": "Verify coupon code available for redemption",
                "parameters": [
                    {
                        "name": "goods_group",
                        "in": "query",
                        "description": "Name of goods group",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "coupon_code",
                        "in": "query",
                        "description": "Coupon code of goods to verify",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "pin_code",
                        "in": "query",
                        "description": "Merchant PIN code generated from admin dashboard",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Merchant/goodsGroup/redeem": {
            "post": {
                "tags": [
                    "Merchant"
                ],
                "description": "Verify coupon code available for redemption",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "goods_group",
                        "in": "query",
                        "description": "Name of goods group",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "coupon_code",
                        "in": "query",
                        "description": "Coupon code of goods to verify",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "pin_code",
                        "in": "query",
                        "description": "Merchant PIN code generated from admin dashboard",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Merchant/goods/redeem": {
            "post": {
                "tags": [
                    "Merchant"
                ],
                "description": "Redeem normal goods from player",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "goods_name",
                        "in": "query",
                        "description": "Name of goods group",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "description": "Amount of goods to be redemed from the player",
                        "required": false,
                        "type": "integer",
                        "default": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Sms/send": {
            "post": {
                "tags": [
                    "Communication"
                ],
                "description": "Send SMS to a player",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "message",
                        "in": "query",
                        "description": "SMS message",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "template_id",
                        "in": "query",
                        "description": "Template message",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Sms/goods": {
            "post": {
                "tags": [
                    "Communication"
                ],
                "description": "Send SMS to a player",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ref_id",
                        "in": "query",
                        "description": "Reference transaction Id for redemption",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "message",
                        "in": "query",
                        "description": "SMS message",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "template_id",
                        "in": "query",
                        "description": "Template message",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Sms/recent": {
            "get": {
                "tags": [
                    "Communication"
                ],
                "description": "List recent SMS messages sent to a player",
                "parameters": [
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "since",
                        "in": "query",
                        "description": "DateTime formatted string",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Sms/template/{template_id}": {
            "get": {
                "tags": [
                    "Communication"
                ],
                "description": "Get processed SMS Template",
                "parameters": [
                    {
                        "name": "template_id",
                        "in": "path",
                        "description": "Template message",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Sms/template": {
            "get": {
                "tags": [
                    "Communication"
                ],
                "description": "Get processed SMS Template",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Player/{id}": {
            "get": {
                "tags": [
                    "Player"
                ],
                "description": "Get public information about a player",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "tags": [
                    "Player"
                ],
                "description": "Get public/private information about a player",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Player/list": {
            "post": {
                "tags": [
                    "Player"
                ],
                "description": "Get public information of players",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "list_player_id",
                        "in": "query",
                        "description": "Comma separated values of player id's or tags (e.g. 1,2,3)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "description": "Specific tag(s) to find",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Player/{id}/data/all": {
            "get": {
                "tags": [
                    "Player"
                ],
                "description": "Get detailed public and private information about a player including (points, badges)",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "tags": [
                    "Player"
                ],
                "description": "Get detailed public and private information about a player including (points, badges)",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Player/{id}/register": {
            "post": {
                "tags": [
                    "Player"
                ],
                "description": "Register a user from client's website as a Playbasis player",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "username",
                        "in": "query",
                        "description": "Player's username",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Player's email",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "image",
                        "in": "query",
                        "description": "Player's profile image",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "Player ID's password",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "phone_number",
                        "in": "query",
                        "description": "Player's phone number (e.g. +66 xxyyyyzzzz)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "description": "Specific tag(s) to find",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "facebook_id",
                        "in": "query",
                        "description": "Player's Facebook ID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "twitter_id",
                        "in": "query",
                        "description": "Player's Twitter ID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "first_name",
                        "in": "query",
                        "description": "Player's first name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "last_name",
                        "in": "query",
                        "description": "Player's last name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gender",
                        "in": "query",
                        "description": "Player's gender",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "1",
                            "2"
                        ]
                    },
                    {
                        "name": "birth_date",
                        "in": "query",
                        "description": "Player's date of birth (e.g. YYYY-MM-DD)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "description": "Referral code of another player for an invitation",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "anonymous",
                        "in": "query",
                        "description": "Anonymous flag",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "0",
                            "1"
                        ]
                    },
                    {
                        "name": "device_id",
                        "in": "query",
                        "description": "Player's Device ID to submit verification process",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "approve_status",
                        "in": "query",
                        "description": "Approval status of the Player",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "approved",
                            "rejected",
                            "pending"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Player/referral": {
            "post": {
                "tags": [
                    "Player"
                ],
                "description": "To perform an invitation between two players and referral code",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "referral_code",
                        "in": "query",
                        "description": "Referral code of another player for an invitation",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Player/{id}/update": {
            "post": {
                "tags": [
                    "Player"
                ],
                "description": "Update a player's information",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "username",
                        "in": "query",
                        "description": "Player's username",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Player's email",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "image",
                        "in": "query",
                        "description": "Player's profile image",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "phone_number",
                        "in": "query",
                        "description": "Player's phone number (e.g. +66 xxyyyyzzzz)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "description": "Specific tag(s) to find",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "facebook_id",
                        "in": "query",
                        "description": "Player's Facebook ID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "twitter_id",
                        "in": "query",
                        "description": "Player's Twitter ID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "first_name",
                        "in": "query",
                        "description": "Player's first name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "last_name",
                        "in": "query",
                        "description": "Player's last name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gender",
                        "in": "query",
                        "description": "Player's gender",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "1",
                            "2"
                        ]
                    },
                    {
                        "name": "birth_date",
                        "in": "query",
                        "description": "Player's date of birth (e.g. YYYY-MM-DD)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "device_id",
                        "in": "query",
                        "description": "Player's Device ID to submit verification process",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exp",
                        "in": "query",
                        "description": "Player's experience points",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "level",
                        "in": "query",
                        "description": "Player's level",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "approve_status",
                        "in": "query",
                        "description": "Approval status of the Player",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "approved",
                            "rejected",
                            "pending"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Player/{id}/custom": {
            "get": {
                "tags": [
                    "Player"
                ],
                "description": "Get custom field information about a player",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "tags": [
                    "Player"
                ],
                "description": "Set custom field information about a player",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "description": "Attribute to change",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "in": "query",
                        "description": "Attribute value",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Player/{id}/player/delete": {
            "post": {
                "tags": [
                    "Player"
                ],
                "description": "Permanently delete a player from Playbasis",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Player/{id}/login": {
            "post": {
                "tags": [
                    "Player"
                ],
                "description": "Tell Playbasis that a player has logged in",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "session_id",
                        "in": "query",
                        "description": "Session ID of the player",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "session_expires_in",
                        "in": "query",
                        "description": "Session expiring in x seconds",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Player/{id}/logout": {
            "post": {
                "tags": [
                    "Player"
                ],
                "description": "Tell Playbasis that a player has logged out",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "session_id",
                        "in": "query",
                        "description": "Session ID of the player",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Player/{id}/sessions": {
            "post": {
                "tags": [
                    "Player"
                ],
                "description": "Get a list of active sessions of a player",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Player/session/{session_id}": {
            "post": {
                "tags": [
                    "Player"
                ],
                "description": "Get a player by their session_id",
                "parameters": [
                    {
                        "name": "session_id",
                        "in": "path",
                        "description": "Player's Session ID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Player/auth": {
            "post": {
                "tags": [
                    "Player"
                ],
                "description": "Authenticate, log in, and create a session for a player",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Player ID's email",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "username",
                        "in": "query",
                        "description": "Player's username",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "Player ID's password",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "device_token",
                        "in": "query",
                        "description": "Player's Device ID to submit verification process",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Player/auth/{id}/verifyOTPCode": {
            "post": {
                "tags": [
                    "Player"
                ],
                "description": "Perform OTP verification from code that has been sent to player's SMS",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "description": "OTP Code to be sent to player",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Player/password/email": {
            "post": {
                "tags": [
                    "Player"
                ],
                "description": "Reset a player's password stored on Playbasis",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Player Email as used in client's website",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Player/{id}/email/verify": {
            "post": {
                "tags": [
                    "Player"
                ],
                "description": "Verify a player's email that's stored on Playbasis",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Player's ID as used in client's website",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Player/{id}/points": {
            "post": {
                "tags": [
                    "Player"
                ],
                "description": "Get information about all point-based rewards that a player currently has",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Player/{id}/point/{point_name}": {
            "post": {
                "tags": [
                    "Player"
                ],
                "description": "Get specified point-based rewards a player currently has",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "point_name",
                        "in": "path",
                        "description": "Name of point-based reward to query",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Player/{id}/point_history": {
            "post": {
                "tags": [
                    "Player"
                ],
                "description": "Returns history points of a player",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "point_name",
                        "in": "query",
                        "description": "Point name to query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of records to start at",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of records to stop at",
                        "required": false,
                        "type": "integer",
                        "default": 20
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Order records by ASC/DESC",
                        "required": false,
                        "type": "string",
                        "default": "desc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Player/{id}/quest_reward_history": {
            "get": {
                "tags": [
                    "Player"
                ],
                "description": "List of all available quests of the client along with the status of the player",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": false,
                        "type": "integer",
                        "default": 50
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Player/{id}/action/{action_name}/count": {
            "post": {
                "tags": [
                    "Player"
                ],
                "description": "Returns the number of times that a player has performed the action",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "action_name",
                        "in": "path",
                        "description": "Name of the action to query",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "description": "Name of the action to query (e.g. currency, type, url)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "in": "query",
                        "description": "List of parameter values of the action to query (e.g. dollar,money, step)",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Player/{id}/action_history": {
            "post": {
                "tags": [
                    "Player"
                ],
                "description": "Returns a list of actions that a player performed",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "action_name",
                        "in": "query",
                        "description": "Point name to query",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "date_start",
                        "in": "query",
                        "description": "Date start (e.g. YYYY-MM-DD format)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "date_end",
                        "in": "query",
                        "description": "Date end (e.g. YYYY-MM-DD format)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of records to stop at",
                        "required": true,
                        "type": "string",
                        "default": "unlimited"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of records to start at",
                        "required": true,
                        "type": "string",
                        "default": 0
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Player/{sent_player_id}/giveGift/{type}": {
            "post": {
                "tags": [
                    "Player"
                ],
                "description": "Deduct a reward from a given player",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "sent_player_id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "received_player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gift_id",
                        "in": "query",
                        "description": "ID of the gift (Badge ID, Goods ID, Custom_Point ID)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Type of gift",
                        "required": true,
                        "type": "string",
                        "default": "BADGE",
                        "enum": [
                            "BADGE",
                            "CUSTOM_POINT",
                            "GOODS"
                        ]
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "description": "Amount of gift(s) to send",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Player/{id}/badge": {
            "get": {
                "tags": [
                    "Player"
                ],
                "description": "Returns information about all Player's earned badges",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Player's current level",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "description": "Specific tag(s) to find",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Player/{id}/badgeAll": {
            "get": {
                "tags": [
                    "Player"
                ],
                "description": "Returns all information about the client's badges",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Player's current level",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "description": "Specific tag(s) to find",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Player/rank/{rank_by}/{limit}": {
            "get": {
                "tags": [
                    "Player"
                ],
                "description": "Returns list of players sorted by the specified range",
                "parameters": [
                    {
                        "name": "rank_by",
                        "in": "path",
                        "description": "Name of point-based reward to rank players by",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "path",
                        "description": "Number of results to return",
                        "required": true,
                        "type": "integer",
                        "default": 20
                    },
                    {
                        "name": "mode",
                        "in": "query",
                        "description": "Weekly, monthly, all time",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "weekly",
                            "monthly",
                            "all-time"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Player/ranks/{limit}": {
            "get": {
                "tags": [
                    "Player"
                ],
                "description": "Returns list of players sorted by the specified range",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "path",
                        "description": "Number of results to return for each point type",
                        "required": true,
                        "type": "string",
                        "default": 20
                    },
                    {
                        "name": "mode",
                        "in": "query",
                        "description": "Weekly, monthly, all time",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "weekly",
                            "monthly",
                            "all-time"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Player/rankuser/{id}/{rank_by}": {
            "get": {
                "tags": [
                    "Player"
                ],
                "description": "Returns list of players sorted by the specified range",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Name of point-based reward to rank players by",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "rank_by",
                        "in": "path",
                        "description": "Name of point-based reward to rank players by",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Player/rankParam/{action}/{parameter}": {
            "get": {
                "tags": [
                    "Player"
                ],
                "description": "Returns list of players sorted by ascending custom parameter",
                "parameters": [
                    {
                        "name": "action",
                        "in": "path",
                        "description": "Action of parameter to rank players by",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "parameter",
                        "in": "path",
                        "description": "Name of parameter to rank players by",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return",
                        "required": false,
                        "type": "integer",
                        "default": 20
                    },
                    {
                        "name": "month",
                        "in": "query",
                        "description": "Month to rank players by (e.g. 01,02,03, ...)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Year to rank players by (e.g. 2017,2018,2019)",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Player/level/{level}": {
            "get": {
                "tags": [
                    "Player"
                ],
                "description": "Returns detail of level",
                "parameters": [
                    {
                        "name": "level",
                        "in": "path",
                        "description": "Player's current level",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "tags": [
                    "Player"
                ],
                "description": "Returns detail of level",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Player's current level",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "deprecated": true
            }
        },
        "/Player/levels": {
            "get": {
                "tags": [
                    "Player"
                ],
                "description": "Returns all details of levels",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "tags": [
                    "Player"
                ],
                "description": "Returns all details of levels",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "level",
                        "in": "query",
                        "description": "Number of levels",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "deprecated": true
            }
        },
        "/Player/{id}/goods": {
            "get": {
                "tags": [
                    "Player"
                ],
                "description": "Returns all goods owned by a specific player",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Name of point-based reward to rank players by",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "description": "Specific tag(s) to find",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Get goods by a specified status",
                        "required": false,
                        "type": "string",
                        "default": "active",
                        "enum": [
                            "active",
                            "all",
                            "expired",
                            "used",
                            "gifted"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Player/{id}/goods/favorite": {
            "post": {
                "tags": [
                    "Player"
                ],
                "description": "Set specific goods in a player's inventory as favorite",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "goods_id",
                        "in": "query",
                        "description": "Comma separated values of tags",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Set favorite status (true | false)",
                        "required": true,
                        "type": "string",
                        "default": "true",
                        "enum": [
                            "true",
                            "false"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Player/{id}/goods/count": {
            "get": {
                "tags": [
                    "Player"
                ],
                "description": "Returns information about the number of goods that a player has",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Name of point-based reward to rank players by",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "description": "Specific tag(s) to find",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Set favorite status (true | false)",
                        "required": true,
                        "type": "string",
                        "default": "active",
                        "enum": [
                            "active",
                            "all",
                            "expired",
                            "used",
                            "gifted"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Player/{id}/code": {
            "get": {
                "tags": [
                    "Player"
                ],
                "description": "Returns generated referral code of a player",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Player/auth/{id}/requestOTPCode": {
            "post": {
                "tags": [
                    "Player"
                ],
                "description": "Request OTP (One Time Password)",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "device_token",
                        "in": "query",
                        "description": "Access token returned from the device",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "device_description",
                        "in": "query",
                        "description": "Device model description",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "device_name",
                        "in": "query",
                        "description": "Device model name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "os_type",
                        "in": "query",
                        "description": "Device OS type",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "IOS",
                            "Android"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Player/auth/{id}/setupPhone": {
            "post": {
                "tags": [
                    "Player"
                ],
                "description": "Request OTP (One Time Password) for setup",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "phone_number",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "device_token",
                        "in": "query",
                        "description": "Access token returned from the device",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "device_description",
                        "in": "query",
                        "description": "Device model description",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "device_name",
                        "in": "query",
                        "description": "Device model name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "os_type",
                        "in": "query",
                        "description": "Device OS type",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "IOS",
                            "Android"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Player/{id}/deduct": {
            "post": {
                "tags": [
                    "Player"
                ],
                "description": "Deduct a reward from a given player",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "reward",
                        "in": "query",
                        "description": "Name of the reward",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "description": "Amount of reward(s) to deduct",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "force",
                        "in": "query",
                        "description": "0 => Do not force if the player does not have enough rewards to deduct. 1 => Force the deduction and set the player's reward to zero",
                        "required": true,
                        "type": "string",
                        "default": 0,
                        "enum": [
                            "0",
                            "1"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Player/{id}/deduct/badge": {
            "post": {
                "tags": [
                    "Player"
                ],
                "description": "Deduct a reward from a given player",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "badge",
                        "in": "query",
                        "description": "Name of the badge",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "description": "Amount of badge(s) to deduct",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "force",
                        "in": "query",
                        "description": "0 => Do not force if the player does not have enough badges to deduct. 1 => Force the deduction and set the player's badges to zero",
                        "required": true,
                        "type": "string",
                        "default": 0,
                        "enum": [
                            "0",
                            "1"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Player/{id}/getAssociatedNode": {
            "get": {
                "tags": [
                    "Player"
                ],
                "description": "Get associated node of player",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Player/{id}/getRole/{node_id}": {
            "get": {
                "tags": [
                    "Player"
                ],
                "description": "Get role of player in specific node",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "node_id",
                        "in": "path",
                        "description": "Node ID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Player/{id}/unlock": {
            "post": {
                "tags": [
                    "Player"
                ],
                "description": "Unlock player for authentication",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Player/{id}/saleReport": {
            "get": {
                "tags": [
                    "Player"
                ],
                "description": "Get sale report of any node that is associated with the player",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "month",
                        "in": "query",
                        "description": "Select month to get sales report (e.g. 1,2,...,12)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Select year to get sales report (e.g. 2017,2018,2019)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "Select action name to query from action log | default = 'sell'",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "parameter",
                        "in": "query",
                        "description": "Select parameter to query from action log | default = 'amount'",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Player/{id}/actionReport": {
            "get": {
                "tags": [
                    "Player"
                ],
                "description": "Get action report of a specific player",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "month",
                        "in": "query",
                        "description": "Select month to get sales report (e.g. 1,2,...,12)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Select year to get sales report (e.g. 2017,2018,2019)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of months to get the report | default = '1 month'",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "Select action name to query from action log | default = 'sell'",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "parameter",
                        "in": "query",
                        "description": "Select parameter to query from action log | default = 'amount'",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Push/send": {
            "post": {
                "tags": [
                    "Communication"
                ],
                "description": "Send push notfications to a player",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "message",
                        "in": "query",
                        "description": "SMS Message",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "template_id",
                        "in": "query",
                        "description": "Template message",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Push/goods": {
            "post": {
                "tags": [
                    "Communication"
                ],
                "description": "Send coupon to a player via push notification.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ref_id",
                        "in": "query",
                        "description": "Reference transaction ID for redemption",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "message",
                        "in": "query",
                        "description": "SMS Message | use {{coupon}} for the code | message or template_id is required",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "template_id",
                        "in": "query",
                        "description": "Template message | message or template_id is required",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Push/deviceRegistration": {
            "post": {
                "tags": [
                    "Communication"
                ],
                "description": "Register for your device",
                "parameters": [
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "device_token",
                        "in": "query",
                        "description": "Access token returned from device",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "device_description",
                        "in": "query",
                        "description": "Device model description",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "device_name",
                        "in": "query",
                        "description": "Device model name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "os_type",
                        "in": "query",
                        "description": "Device model name",
                        "required": true,
                        "type": "string",
                        "default": "IOS",
                        "enum": [
                            "IOS",
                            "Android"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Push/deviceDeRegistration": {
            "post": {
                "tags": [
                    "Communication"
                ],
                "description": "DeRegister for your device",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "device_token",
                        "in": "query",
                        "description": "Access token returned from device",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Push/recent": {
            "get": {
                "tags": [
                    "Communication"
                ],
                "description": "List recent push notifications to a player",
                "parameters": [
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "since",
                        "in": "query",
                        "description": "DateTime format string",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Push/template/{template_id}": {
            "get": {
                "tags": [
                    "Communication"
                ],
                "description": "List recent push notifications to a player",
                "parameters": [
                    {
                        "name": "template_id",
                        "in": "path",
                        "description": "Template message",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Push/template": {
            "get": {
                "tags": [
                    "Communication"
                ],
                "description": "List recent push notifications",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Quest/available": {
            "get": {
                "tags": [
                    "Quest"
                ],
                "description": "Returns information about the list of available quests for a player",
                "parameters": [
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Quest/{id}/available": {
            "get": {
                "tags": [
                    "Quest"
                ],
                "description": "Returns information about the list of available quests for a player",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Quest ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Quest/{id}": {
            "get": {
                "tags": [
                    "Quest"
                ],
                "description": "Returns information about the quest with the specified ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Quest ID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Quest/{id}/join": {
            "post": {
                "tags": [
                    "Quest"
                ],
                "description": "Join a quest",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Quest ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Quest/joinAll": {
            "post": {
                "tags": [
                    "Quest"
                ],
                "description": "Make the player join all available quests",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Quest/{id}/cancel": {
            "post": {
                "tags": [
                    "Quest"
                ],
                "description": "Make the player cancel the specified quest",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Quest ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Quest/{id}/mission/{mission_id}": {
            "post": {
                "tags": [
                    "Quest"
                ],
                "description": "Returns information about the mission with the specified ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Quest ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "mission_id",
                        "in": "path",
                        "description": "Mission ID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Player/quest": {
            "get": {
                "tags": [
                    "Player"
                ],
                "description": "Returns generated referral code of a player",
                "parameters": [
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "description": "Specific tag(s) to find",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Fields to be inclued (Comma separated)",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Player/quest/{id}": {
            "get": {
                "tags": [
                    "Player"
                ],
                "description": "Returns generated referral code of a player",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Quest ID the player has joined",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Fields to be inclued (Comma separated)",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Player/questAll/{id}": {
            "get": {
                "tags": [
                    "Player"
                ],
                "description": "List of all available quests of the client along with the status of the player",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Quest/reset": {
            "post": {
                "tags": [
                    "Quest"
                ],
                "description": "Make the player cancel the specified quest",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "quest_id",
                        "in": "query",
                        "description": "Quest ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Quest/leader": {
            "get": {
                "tags": [
                    "Quest"
                ],
                "description": "Make the player cancel the specified quest",
                "parameters": [
                    {
                        "name": "quest_id",
                        "in": "query",
                        "description": "Quest ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "completion_element_id",
                        "in": "query",
                        "description": "Quest complete element ID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": false,
                        "type": "string",
                        "default": 0
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": false,
                        "type": "string",
                        "default": 20
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": false,
                        "type": "string",
                        "default": "",
                        "enum": [
                            "",
                            "finish",
                            "join"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Quest/list": {
            "get": {
                "tags": [
                    "Quiz"
                ],
                "description": "Returns a list of all active quizzes",
                "parameters": [
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Quiz / Poll",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "get_status",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": false,
                        "type": "string",
                        "default": "false"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Quest/{id}/detail": {
            "get": {
                "tags": [
                    "Quiz"
                ],
                "description": "Get details of a specified quiz",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Quiz ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Quest/random": {
            "get": {
                "tags": [
                    "Quiz"
                ],
                "description": "Randomly get a quiz out of all active quizzes",
                "parameters": [
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Quiz / Poll",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "description": "Specific tag(s) to find",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Quiz/player/{player_id}/{limit}": {
            "post": {
                "tags": [
                    "Quiz"
                ],
                "description": "Revoke existing Access Token",
                "parameters": [
                    {
                        "name": "player_id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "path",
                        "description": "Number of quizzes",
                        "required": true,
                        "type": "integer",
                        "default": 5
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Quest/player/{player_id}/pending/{limit}": {
            "get": {
                "tags": [
                    "Quiz"
                ],
                "description": "Return a list of pending quizzes by the player",
                "parameters": [
                    {
                        "name": "player_id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "path",
                        "description": "Number of quizzes",
                        "required": true,
                        "type": "integer",
                        "default": 5
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Quest/{id}/question": {
            "get": {
                "tags": [
                    "Quiz"
                ],
                "description": "Get a question with a list of options for a given quiz",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Quiz ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "question_id",
                        "in": "query",
                        "description": "Question ID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "random",
                        "in": "query",
                        "description": "Randomize result",
                        "required": true,
                        "type": "integer",
                        "default": 1,
                        "enum": [
                            1,
                            2
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "tags": [
                    "Quiz"
                ],
                "description": "Get a question with a list of options for a given quiz",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Quiz ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "question_id",
                        "in": "query",
                        "description": "Question ID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "random",
                        "in": "query",
                        "description": "Randomize result",
                        "required": true,
                        "type": "integer",
                        "default": 1,
                        "enum": [
                            1,
                            2
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Quest/{id}/answer": {
            "post": {
                "tags": [
                    "Quiz"
                ],
                "description": "Submit a player's answer for a question within a quiz",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Quiz ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "question_id",
                        "in": "query",
                        "description": "Question ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "option_id",
                        "in": "query",
                        "description": "Option ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "answer",
                        "in": "query",
                        "description": "Specific answer required for range options",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Quiz/{id}/rank/{limit}": {
            "get": {
                "tags": [
                    "Quiz"
                ],
                "description": "Submit a player's answer for a question within a quiz",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Quiz ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "path",
                        "description": "Limit number of players",
                        "required": true,
                        "type": "integer",
                        "default": 5
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Quiz/{id}/stat": {
            "get": {
                "tags": [
                    "Quiz"
                ],
                "description": "Query statistics of a quiz completed by all users",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Quiz ID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Quiz/{id}/completed": {
            "get": {
                "tags": [
                    "Quiz"
                ],
                "description": "Get count of completed quizzes",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Quiz ID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Quiz/reset": {
            "post": {
                "tags": [
                    "Quiz"
                ],
                "description": "Get count of completed quizzes",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "quiz_id",
                        "in": "query",
                        "description": "Quiz ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Redeem/goods": {
            "post": {
                "tags": [
                    "Redeem"
                ],
                "description": "Redeem goods for a client's website",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "goods_id",
                        "in": "query",
                        "description": "Goods ID from a Goods Store",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "description": "Amount of goods to give to the player",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Redeem/sponsor": {
            "post": {
                "tags": [
                    "Redeem"
                ],
                "description": "Redeem sponsor goods for a client's website",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "goods_id",
                        "in": "query",
                        "description": "Goods ID from a Goods store",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "description": "Amount of goods to give to the player",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Redeem/goodsGroup": {
            "post": {
                "tags": [
                    "Redeem"
                ],
                "description": "Redeem goods for a given group",
                "parameters": [
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "group",
                        "in": "query",
                        "description": "Goods group",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "description": "Amount of goods to give to the player",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Redeem/sponsorGroup": {
            "get": {
                "tags": [
                    "Redeem"
                ],
                "description": "Find the number of available sponsored goods given a group",
                "parameters": [
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "group",
                        "in": "query",
                        "description": "Goods group",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "description": "Amount of goods to give to the player",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "tags": [
                    "Redeem"
                ],
                "description": "Redeem goods for a given group",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "group",
                        "in": "query",
                        "description": "Goods group",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "description": "Amount of goods to give to the player",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Service/recent_point": {
            "get": {
                "tags": [
                    "Service"
                ],
                "description": "Returns recent points",
                "parameters": [
                    {
                        "name": "point_name",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Index of records to start at",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return",
                        "required": false,
                        "type": "integer",
                        "default": 20
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Service/recentActivities": {
            "get": {
                "tags": [
                    "Live Feed"
                ],
                "description": "Returns recent activites",
                "parameters": [
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Index of records to start at",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return",
                        "required": false,
                        "type": "integer",
                        "default": 20
                    },
                    {
                        "name": "last_read_activity_id",
                        "in": "query",
                        "description": "Last activity ID that you read",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "mode",
                        "in": "query",
                        "description": "Specify all or player",
                        "required": false,
                        "type": "string",
                        "default": "all",
                        "enum": [
                            "all",
                            "player"
                        ]
                    },
                    {
                        "name": "event_type",
                        "in": "query",
                        "description": "Event type",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "reward",
                            "redeem",
                            "action",
                            "level"
                        ]
                    },
                    {
                        "name": "action_name",
                        "in": "query",
                        "description": "Filter action name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "reward_name",
                        "in": "query",
                        "description": "Filter reward name",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Service/detailActivityFeed/{activity_id}": {
            "get": {
                "tags": [
                    "Live Feed"
                ],
                "description": "Get detail activity",
                "parameters": [
                    {
                        "name": "activity_id",
                        "in": "path",
                        "description": "Activity ID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Service/likeActivityFeed/{activity_id}": {
            "post": {
                "tags": [
                    "Live Feed"
                ],
                "description": "Like activity",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "activity_id",
                        "in": "path",
                        "description": "Activity ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Service/commentActivity/{activity_id}": {
            "post": {
                "tags": [
                    "Live Feed"
                ],
                "description": "Comment on activity",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "activity_id",
                        "in": "path",
                        "description": "Activity ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "message",
                        "in": "query",
                        "description": "Comment message",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Service/reset_point": {
            "post": {
                "tags": [
                    "Service"
                ],
                "description": "Reset point of all players",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "point_name",
                        "in": "query",
                        "description": "Name of the point-based reward to query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Setting/appStatus": {
            "post": {
                "tags": [
                    "Setting"
                ],
                "description": "Check if application is enabled in settings",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Setting/security": {
            "post": {
                "tags": [
                    "Setting"
                ],
                "description": "Check player token security in settings",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "deprecated": true
            }
        },
        "/StoreOrg/nodes/{node_id}/addPlayer/{player_id}": {
            "post": {
                "tags": [
                    "Store Organize"
                ],
                "description": "Add player to a specific node",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "node_id",
                        "in": "path",
                        "description": "Node Id to add the player to",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/StoreOrg/nodes/{node_id}/addContent/{content_node_id}": {
            "post": {
                "tags": [
                    "Store Organize"
                ],
                "description": "Register content",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "node_id",
                        "in": "path",
                        "description": "Node ID of store organization to add to player",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "content_node_id",
                        "in": "path",
                        "description": "Node ID of store organization to add to player",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/StoreOrg/nodes/{node_id}/removePlayer/{player_id}": {
            "post": {
                "tags": [
                    "Store Organize"
                ],
                "description": "Remove player from a specific node",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "node_id",
                        "in": "path",
                        "description": "Node Id to remove the player from",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/StoreOrg/nodes/{node_id}/removeContent/{content_node_id}": {
            "post": {
                "tags": [
                    "Store Organize"
                ],
                "description": "Remove content",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "node_id",
                        "in": "path",
                        "description": "Node ID of store organization to add to player",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "content_node_id",
                        "in": "path",
                        "description": "Node ID of store organization to add to player",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/StoreOrg/nodes/{node_id}/setPlayerRole/{player_id}": {
            "post": {
                "tags": [
                    "Store Organize"
                ],
                "description": "Set player role",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "node_id",
                        "in": "path",
                        "description": "Node Id to remove the player from",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "role",
                        "in": "query",
                        "description": "Role name for the player",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/StoreOrg/nodes/{node_id}/unsetPlayerRole/{player_id}": {
            "post": {
                "tags": [
                    "Store Organize"
                ],
                "description": "Unset a player's organization role from specific node",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "node_id",
                        "in": "path",
                        "description": "Node Id to add the player to",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "path",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "role",
                        "in": "query",
                        "description": "Player's role to unset",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/StoreOrg/nodes/{node_id}/setContentRole/{content_node_id}": {
            "post": {
                "tags": [
                    "Store Organize"
                ],
                "description": "Set content role",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "node_id",
                        "in": "path",
                        "description": "Node ID of store organization to add to player",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "content_node_id",
                        "in": "path",
                        "description": "Node ID of store organization to add to player",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "role",
                        "in": "query",
                        "description": "Role name to set content's role",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/StoreOrg/nodes/{node_id}/unsetContentRole/{content_node_id}": {
            "post": {
                "tags": [
                    "Store Organize"
                ],
                "description": "Unset content role",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "node_id",
                        "in": "path",
                        "description": "Node ID of store organization to add to player",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "content_node_id",
                        "in": "path",
                        "description": "Node ID of store organization to add to player",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "role",
                        "in": "query",
                        "description": "Role name to set content's role",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/StoreOrg/organizes": {
            "get": {
                "tags": [
                    "Store Organize"
                ],
                "description": "Reset point of all players",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Specify Organize ID to retrieve",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Specify Organize name to retrieve",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Specify field to be sort (_id, name, status, description, date_added, date_modified)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Specify sorted direction",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Specify paging offset",
                        "required": false,
                        "type": "string",
                        "default": 0
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Specify paging limit",
                        "required": false,
                        "type": "string",
                        "default": 20
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/StoreOrg/nodes": {
            "get": {
                "tags": [
                    "Store Organize"
                ],
                "description": "List nodes as set from administration dashboard",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Specify Node ID to retrieve",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organize_id",
                        "in": "query",
                        "description": "Specify Organization ID to retrieve",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "parent_id",
                        "in": "query",
                        "description": "Specify Parent ID to retrieve",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Specify Organize name to retrieve",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Specify field to be sort (_id, name, status, description, date_added, date_modified)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Specify sorted direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Specify paging offset",
                        "required": false,
                        "type": "string",
                        "default": 0
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Specify paging limit",
                        "required": false,
                        "type": "string",
                        "default": 20
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/StoreOrg/nodes/{node_id}/getChildNode/{layer}": {
            "get": {
                "tags": [
                    "Store Organize"
                ],
                "description": "Get a player's list from a specific node",
                "parameters": [
                    {
                        "name": "node_id",
                        "in": "path",
                        "description": "Node ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "layer",
                        "in": "query",
                        "description": "Layer of nodes under specific node to find | default = 0 for finding all",
                        "required": true,
                        "type": "string",
                        "default": 0
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/StoreOrg/nodes/{node_id}/saleReport": {
            "get": {
                "tags": [
                    "Store Organize"
                ],
                "description": "Sale report of specific node in a month",
                "parameters": [
                    {
                        "name": "node_id",
                        "in": "path",
                        "description": "Node ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "month",
                        "in": "query",
                        "description": "Month to rank players by | (e.g. 01, 02, 03)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Year to rank players by | (e.g. 2015, 2016, 2017)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "Month to rank players by | (e.g. 01, 02, 03)",
                        "required": false,
                        "type": "string",
                        "default": "sell"
                    },
                    {
                        "name": "parameter",
                        "in": "query",
                        "description": "Year to rank players by | (e.g. 2015, 2016, 2017)",
                        "required": false,
                        "type": "string",
                        "default": "amount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/StoreOrg/nodes/{node_id}/saleHistory/{count}": {
            "get": {
                "tags": [
                    "Store Organize"
                ],
                "description": "Sale history of specific node",
                "parameters": [
                    {
                        "name": "node_id",
                        "in": "path",
                        "description": "Node ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "count",
                        "in": "path",
                        "description": "Number of months to get",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "month",
                        "in": "query",
                        "description": "Month to rank players by | (e.g. 01, 02, 03)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Year to rank players by | (e.g. 2015, 2016, 2017)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "Month to rank players by | (e.g. 01, 02, 03)",
                        "required": false,
                        "type": "string",
                        "default": "sell"
                    },
                    {
                        "name": "parameter",
                        "in": "query",
                        "description": "Year to rank players by | (e.g. 2015, 2016, 2017)",
                        "required": false,
                        "type": "string",
                        "default": "amount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/StoreOrg/nodes/{node_id}/saleBoard/{layer}": {
            "get": {
                "tags": [
                    "Store Organize"
                ],
                "description": "Sale history of specific node",
                "parameters": [
                    {
                        "name": "node_id",
                        "in": "path",
                        "description": "Node ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "layer",
                        "in": "path",
                        "description": "Layer of nodes under a specific node to find | default = 0",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "month",
                        "in": "query",
                        "description": "Month to rank players by | (e.g. 01, 02, 03)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Year to rank players by | (e.g. 2015, 2016, 2017)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "Month to rank players by | (e.g. 01, 02, 03)",
                        "required": false,
                        "type": "string",
                        "default": "sell"
                    },
                    {
                        "name": "parameter",
                        "in": "query",
                        "description": "Year to rank players by | (e.g. 2015, 2016, 2017)",
                        "required": false,
                        "type": "string",
                        "default": "amount"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Month to rank players by | (e.g. 01, 02, 03)",
                        "required": false,
                        "type": "string",
                        "default": 0
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Year to rank players by | (e.g. 2015, 2016, 2017)",
                        "required": false,
                        "type": "string",
                        "default": 0
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/StoreOrg/players/{node_id}": {
            "get": {
                "tags": [
                    "Store Organize"
                ],
                "description": "Get a player's list from a specific node",
                "parameters": [
                    {
                        "name": "node_id",
                        "in": "path",
                        "description": "Node ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "point_name",
                        "in": "query",
                        "description": "Role name",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/StoreOrg/rankPeer/{node_id}/{rank_by}": {
            "get": {
                "tags": [
                    "Store Organize"
                ],
                "description": "Reset point of all players",
                "parameters": [
                    {
                        "name": "node_id",
                        "in": "path",
                        "description": "Organization ID to be ranked",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "rank_by",
                        "in": "path",
                        "description": "Name of point-based reward to rank players by",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Select page to be reported | default = 0",
                        "required": false,
                        "type": "string",
                        "default": 0
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Specify paging limit | default = 20",
                        "required": false,
                        "type": "integer",
                        "default": 20
                    },
                    {
                        "name": "under_org",
                        "in": "query",
                        "description": "Return rank of organizations under a given node",
                        "required": true,
                        "type": "integer",
                        "default": "false",
                        "enum": [
                            "true",
                            "false"
                        ]
                    },
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "month",
                        "in": "query",
                        "description": "Month to rank players by | (e.g. 01, 02, 03)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Year to rank players by | (e.g. 2015, 2016, 2017)",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/StoreOrg/rankPeerByAccAction/{node_id}/{action}/{parameter}": {
            "get": {
                "tags": [
                    "Store Organize"
                ],
                "description": "Reset point of all players",
                "parameters": [
                    {
                        "name": "node_id",
                        "in": "path",
                        "description": "Organization ID to be ranked",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "action",
                        "in": "path",
                        "description": "Name of action to rank players by",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "parameter",
                        "in": "path",
                        "description": "Name of parameter to rank players by",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "role",
                        "in": "query",
                        "description": "Role in Organization to be filtered",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Select page to be reported | default = 0",
                        "required": false,
                        "type": "string",
                        "default": 0
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Specify paging limit | default = 20",
                        "required": false,
                        "type": "integer",
                        "default": 20
                    },
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "month",
                        "in": "query",
                        "description": "Month to rank players by | (e.g. 01, 02, 03)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Year to rank players by | (e.g. 2015, 2016, 2017)",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Timestamp": {
            "get": {
                "tags": [
                    "Timestamp"
                ],
                "description": "Retrieve timestamp",
                "parameters": [
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Specify sorted direction | (e.g. desc, asc)",
                        "required": false,
                        "type": "string",
                        "default": "desc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "tags": [
                    "Timestamp"
                ],
                "description": "Record timestamp",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Trip": {
            "get": {
                "tags": [
                    "Trip"
                ],
                "description": "List of Trips that the player has started.",
                "parameters": [
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "trip_id",
                        "in": "query",
                        "description": "Trip ID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "finished",
                        "in": "query",
                        "description": "Status of trip",
                        "required": false,
                        "type": "string",
                        "default": "",
                        "enum": [
                            "",
                            "true",
                            "false"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Trip/startTrip": {
            "post": {
                "tags": [
                    "Trip"
                ],
                "description": "Start trip",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Trip/finishTrip": {
            "post": {
                "tags": [
                    "Trip"
                ],
                "description": "Finish trip",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "drive_log",
                        "in": "query",
                        "description": "Response including driving log",
                        "required": true,
                        "type": "string",
                        "default": "false",
                        "enum": [
                            "true",
                            "false"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Trip/addTripLog": {
            "post": {
                "tags": [
                    "Trip"
                ],
                "description": "Log driving status of the trip that the player has started",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Access token returned by Playbasis Authentication",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "trip_id",
                        "in": "query",
                        "description": "Trip Id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "speed",
                        "in": "query",
                        "description": "Current speed | (km/h)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "latitude",
                        "in": "query",
                        "description": "Current latitude",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "longitude",
                        "in": "query",
                        "description": "Current longitude",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "altitude",
                        "in": "query",
                        "description": "Current altitude",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "rpm",
                        "in": "query",
                        "description": "Current RPM",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "distance",
                        "in": "query",
                        "description": "Distance from start",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "speed_limit",
                        "in": "query",
                        "description": "Speed limit at the location | (km/h)",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/Trip/getTripLog": {
            "get": {
                "tags": [
                    "Trip"
                ],
                "description": "Retrieve driving status log of specific trip Id",
                "parameters": [
                    {
                        "name": "player_id",
                        "in": "query",
                        "description": "Player ID as used in client's website",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "trip_id",
                        "in": "query",
                        "description": "Trip Id",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    },
    "definitions": {},
    "securityDefinitions": {
        "apiKey": {
            "type": "apiKey",
            "name": "api_key",
            "in": "query"
        },
        "token": {
            "type": "apiKey",
            "name": "token",
            "in": "query"
        }
    },
    "security": [
        {
            "apiKey": [],
            "token": []
        }
    ]
}